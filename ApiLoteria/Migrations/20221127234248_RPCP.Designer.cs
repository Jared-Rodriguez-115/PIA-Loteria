// <auto-generated />
using System;
using ApiLoteria;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiLoteria.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221127234248_RPCP")]
    partial class RPCP
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiLoteria.Entidades.Cartas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cartas");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Premio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("RifaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Premios");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Rifa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("NumPrem")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rifas");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.RPCP", b =>
                {
                    b.Property<int>("RifaId")
                        .HasColumnType("int");

                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("CartasId")
                        .HasColumnType("int");

                    b.Property<int>("PremioId")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.HasKey("RifaId", "ParticipanteId", "CartasId", "PremioId");

                    b.HasIndex("CartasId");

                    b.HasIndex("ParticipanteId");

                    b.HasIndex("PremioId");

                    b.ToTable("RPCP");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.RPCP", b =>
                {
                    b.HasOne("ApiLoteria.Entidades.Cartas", "Cartas")
                        .WithMany("RPCP")
                        .HasForeignKey("CartasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLoteria.Entidades.Participante", "Participante")
                        .WithMany("RPCP")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLoteria.Entidades.Premio", "Premio")
                        .WithMany("RPCP")
                        .HasForeignKey("PremioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiLoteria.Entidades.Rifa", "Rifa")
                        .WithMany("RPCP")
                        .HasForeignKey("RifaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartas");

                    b.Navigation("Participante");

                    b.Navigation("Premio");

                    b.Navigation("Rifa");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Cartas", b =>
                {
                    b.Navigation("RPCP");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Participante", b =>
                {
                    b.Navigation("RPCP");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Premio", b =>
                {
                    b.Navigation("RPCP");
                });

            modelBuilder.Entity("ApiLoteria.Entidades.Rifa", b =>
                {
                    b.Navigation("RPCP");
                });
#pragma warning restore 612, 618
        }
    }
}
